The Ansible playbook is designed to automate the deployment and configuration of the csv-uploader web application, which is built using Flask.
The playbook ensures that the necessary dependencies are installed, the application configuration is correctly set up.

csv-uploader/
│
├── ansible/             # Ansible configuration directory
│   ├── playbook.yaml        # Main Ansible playbook
│   ├── templates/           # Templates directory for configuration files
│   │   └── .env.j2              # Jinja2 template for .env file
└── ├── README

Running the Playbook:-
To run in localhost, You can provide it when running the playbook by using the --ask-become-pass (or -K) flag:
ansible-playbook playbook.yaml --ask-become-pass

To use inventory-file
ansible-playbook -i inventory.ini playbook.yaml --ask-become-pass

#Sensitive Information - Prefer using Ansible Vault or external secret management tools for storing sensitive information.
Password: Spain@2023#

Managing SSL Certificates with AWS Secret Manager
To securely store and manage your SSL certificates, I recommend using AWS Secret Manager. This service provides a centralized repository for secrets, ensuring they are encrypted at rest and in transit.

Create an AWS Secret Manager Secret:
Log in to your AWS Management Console and navigate to the Secret Manager service.
Create a new secret with a name like "nginx-ssl-certs".
Add your SSL certificate and private key as secret values.

Modify your deployment.yaml to reference the AWS Secret Manager secret:
YAML
- name: Nginx
  image: nginx:latest
  volumeMounts:
    - name: shared-storage
      mountPath: /etc/nginx/ssl

Create k8s secret file directly on cluster and reference the key-value pair of SM from there

Note: Currently I have not stored secrets on AWS SM & above content to my deployment (without secret it'll fail at later stage),
To successfully deploy the key & certificates, please follow the steps outlined in the previous section to add the necessary content to your deployment configuration and store the certificates in AWS Secret Manager.


# In the actual k8s cluster, it is recommended to target the specific pod or deployment using Kubernetes-specific Ansible modules
https://docs.ansible.com/ansible/2.9/modules/k8s_module.html
